#!/usr/bin/perl 
#
# $Id$

use Pg;

$dbmain = 'template1';
$dbname = 'weather';
$dbhost = "";

%wxobs = ('obstime', \$obstime,  'temp_in', \$temp_in, 
	  'temp_out', \$temp_out,  'rh_in',  \$rh_in,
	  'rh_out',  \$rh_out,    'dp_in', \$dp_in,
	  'dp_out', \$dp_in,      'chill', \$chill,
	  'rain_tot', \$rain_tot, 'rain_rate', \$rain_rate,
	  'gust_spd', \$gust_spd, 'gust_dir', \$gust_dir,
	  'wavg_spd', \$wavg_spd, 'wavg_dir', \$wavg_dir,
	  'barometer', \$barometer);
%curobs = %wxobs;
$curobs{'rtot_offset'}=\$rtot_offset;
$curobs{'selector'}=\$selector;

#$dbhost = get_resp("Connect to host running Postgres:",$dbhost);

#$conn = Pg::connectdb("dbname=$dbmain host=$dbhost");
#cmp_eq(PGRES_CONNECTION_OK, $conn->status);

$user="mikef";

if ($dbhost eq "")  {
    $conn = Pg::connectdb("dbname=$dbname user=$user");
} else {
    $conn = Pg::connectdb("dbname=$dbname host=$dbhost user=$user");
}

if (!cmp_eq(PGRES_CONNECTION_OK, $conn->status)) {
  die("Cannot find database weather!");
}

$db = $conn->db;
#cmp_eq($dbname, $db);

$user = $conn->user;
#cmp_ne("", $user);

$host = $conn->host;
#cmp_ne("", $host);

$port = $conn->port;
#cmp_ne("", $port);

#load_location();
load_curobs();

$rain=$rain_tot + $rtot_offset;

printf("Observation time: %s\n",$obstime);
printf("Outdoor Temp: %4gF, Indoor Temp: %4gF\n",CtoF($temp_out), CtoF($temp_in));
printf("Outdoor RH: %d%%,  Indoor RH: %d%%\n", $rh_out, $rh_in);
printf("Outdoor dewpt: %4gF, Indoor dewpt: %4gF\n",CtoF($dp_out),CtoF($dp_in));
printf("Wind Chill: %4gF, Barometer: %5g in-Hg\n",CtoF($chill), mbtoin($barometer));
printf("Rain YTD: %2g in, Rain rate: %2g in/hr\n",mmtoin($rain), mmtoin($rain_rate));
printf("Gust: %2g mi/hr, Direction: %d\n",mpstomph($gust_spd), $gust_dir);
printf("Wind Avg %2g mi/hr, Direction: %d\n",mpstomph($wavg_spd), $wavg_dir);
print("\n");

($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$year += 1900;
$today=sprintf("%.2d/%.2d/%.4d %.2d:%.2d:%.2d",$mon+1,$mday,$year,0,0,0);

temp_extreme($today,"today");
historical($today,"today");
printf("\n");

$today=sprintf("%.2d/%.2d/%.4d %.2d:%.2d:%.2d",$mon+1,1,$year,0,0,0);

temp_extreme($today,"this month");
historical($today,"this month");

exit;

sub historical {
  my($today,$period)=@_;


  $result=$conn->exec("SELECT rain_tot, rtot_offset FROM current_obs;");
  if (cmp_eq(PGRES_TUPLES_OK, $result->resultStatus)) {
    $tup=$result->ntuples-1;
    $rain=getfield(0,'rain_tot');
    $offset=getfield(0,'rtot_offset');
  }
 
  
  $result=$conn->exec("SELECT rain_tot FROM wxobs where obstime >= \'$today\';");
  if (cmp_eq(PGRES_TUPLES_OK, $result->resultStatus)) {
    $tup=$result->ntuples-1;
    $start_rain=getfield(0,'rain_tot');
  }
  $today_rain = $rain + $offset - $start_rain;
  
  $result=$conn->exec("SELECT obstime,rain_rate FROM wxobs WHERE 
       obstime >= \'$today\' AND rain_rate = (SELECT 
       max(rain_rate) FROM wxobs WHERE obstime >= \'$today\');");
  if (cmp_eq(PGRES_TUPLES_OK, $result->resultStatus)) {
    $tup=$result->ntuples-1;
    $toprate=getfield($tup,'rain_rate');
    $toptime=getfield($tup,'obstime');
  }
  
  printf("Rain $period: %4.4g in\n",mmtoin($today_rain));
  if ($toprate) {
    printf("Peak rain rate $period: %4.2g in/hr at %s\n",mmtoin($toprate),$toptime);
  }
}

sub temp_extreme {
  my($today,$period)=@_;

  $result=$conn->exec("SELECT obstime,temp_out FROM wxobs WHERE 
          obstime >= \'$today\' AND temp_out = (SELECT
          max(temp_out) FROM wxobs WHERE obstime >= \'$today\' );");
  if (cmp_eq(PGRES_TUPLES_OK, $result->resultStatus)) {
    $tup=$result->ntuples-1;
    $toptemp=getfield($tup,'temp_out');
    $toptime=getfield($tup,'obstime');
  }

  $result=$conn->exec("SELECT obstime,temp_out FROM wxobs WHERE 
          obstime >= \'$today\' AND temp_out = (SELECT
          min(temp_out) FROM wxobs WHERE obstime >= \'$today\' );");
  if (cmp_eq(PGRES_TUPLES_OK, $result->resultStatus)) {
    $tup=$result->ntuples-1;
    $mintemp=getfield($tup,'temp_out');
    $mintime=getfield($tup,'obstime');
  }

  printf("High (outdoor) temp $period: %4g at %s\n",CtoF($toptemp),$toptime);
  printf("Low  (outdoor) temp $period: %4g at %s\n",CtoF($mintemp),$mintime);
}

sub pg_now {
  ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime(time);
  $year += 1900;
  $str=sprintf("%.2d/%.2d/%.4d %.2d:%.2d:%.2d",$mon+1,$mday,$year,$hour,$min,$sec);
  return($str);
}

sub CtoF {
  my($c)=@_;
  return(9*$c/5 + 32.0);
}

sub mmtoin {
  my($mm)=@_;
  return($mm/25.4);
}

sub mbtoin {
  my($mb)=@_;
  return($mb*0.0295299875);
}

sub mpstomph {
  my($mps)=@_;
  return($mps*2.23693629);
}

sub load_location {
  $result=$conn->exec("SELECT * FROM location;");
  if (cmp_eq(PGRES_TUPLES_OK, $result->resultStatus)) {
    $tup=$result->ntuples-1;
    $contact=getfield($tup,'contact_name');
    $phone=getfield($tup,'contact_phone');
    $email=getfield($tup,'contact_email');
    $lat=getfield($tup,'latitude') + 0.0;
    $long=getfield($tup,'longitude') + 0.0;
    $street1=getfield($tup,'street1');
    $street2=getfield($tup,'street2');
    $street3=getfield($tup,'street3');
    $city=getfield($tup,'city');
    $state=getfield($tup,'state');
    $country=getfield($tup,'country');
    $postal=getfield($tup,'postal');
  }
}

sub load_curobs {
  $result=$conn->exec("SELECT * FROM current_obs WHERE selector = 1;");
  if (cmp_eq(PGRES_TUPLES_OK, $result->resultStatus)) {
    $tup=$result->ntuples-1;
    foreach $fname (keys(%curobs)) {
      rgetfield($tup,$fname,$curobs{$fname});
    }
  }
}

sub getfield {
  my($tup,$fname)=@_;
  my $field = $result->fnumber($fname);
  return ($result->getvalue($tup,$field));
}

sub rgetfield {
  my($tup,$fname,$ref) = @_;
  my $field = $result->fnumber($fname);
  $$ref=($result->getvalue($tup,$field));
}

sub get_resp {
  my ($prompt, $default)=@_;
  
  select STDOUT; $|=1;
  print("$prompt [$default] ");
  $in=<>; chop;
  $in=~s/^[\s\t]+//g;
  $in=~s/[\s\t\n]+$//g;
  if ($in=~/^[\s\t]*$/ ) { return($default); }
  return($in);
}

sub get_yn {
  my ($prompt, $default)=@_;
  
  select STDOUT; $|=1;
  print("$prompt [$default] ");
  $in=<>; chop;
  $in=~s/^[\s\t]+//g;
  $in=~s/[\s\t\n]+$//g;
  if ($in=~/^[\s\t]*$/ ) { $in=$default; }
  if ($in=~/^[\s\t]*[Yy1Tt]/) {
    return(1);
  } else {
    return(0);
  }
}    

sub cmp_eq {
  my($cmp,$ret)=@_;
  my $msg;
  my $rval;
  
  if ($cmp == $ret) {
    $rval=1;
  } else {
    $msg = $conn->errorMessage;
    print "error: $cmp, $ret\n$msg\n";
    $rval=0;
  }
  return($rval);
}

sub cmp_ne {
  my($cmp,$ret)=@_;
  my $msg;
  my $rval;
  
  if ($cmp != $ret) {
    $rval=1;
  } else {
    $msg = $conn->errorMessage;
    print "error: $cmp, $ret\n$msg\n";
    $rval=0;
  }
  return($rval);
}
